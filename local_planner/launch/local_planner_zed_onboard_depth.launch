<!-- SITL launch file which uses an authentic gazebo model of the Realsense camera-->
<!-- To be able to run this complete the following steps:-->
<!-- Clone this package into catkin_ws and build:-->
<!-- git clone git@github.com:SyrianSpock/realsense_gazebo_plugin.git-->
<!-- catkin build realsense_gazebo_plugin (for ROS kinetic, the kinetic-devel branch must be used)-->
<!-- Add to Gazebo model path:-->
<!-- export GAZEBO_MODEL_PATH=${GAZEBO_MODEL_PATH}:my_path/catkin_ws/src/realsense_gazebo_plugin/models-->


<launch>
    <arg name="pointcloud_topics" default="[/zed/camera/depth/points2]"/>

    <node pkg="tf" type="static_transform_publisher" name="tf_zed_camera"
          args="0 0 0 0 0 0 fcu base_link 10"/>

    <!-- Load custom console configuration -->
    <env name="ROSCONSOLE_CONFIG_FILE" value="$(find local_planner)/resource/custom_rosconsole.conf"/>

    <!-- Launch local planner -->
    <node name="local_planner_node" pkg="local_planner" type="local_planner_node" output="screen" >
        <param name="goal_x_param" value="1" />
        <param name="goal_y_param" value="0"/>
        <param name="goal_z_param" value="2" />
        <rosparam param="pointcloud_topics" subst_value="True">$(arg pointcloud_topics)</rosparam>
    </node>

    <!-- Launch pointcloud generation from Realsense images -->  
    <arg name="camera_info" value="/zed/zed_node/rgb_raw/camera_info"/>
    <arg name="depReg_imgraw" value="/zed/zed_node/depth/depth_registered"/>  <!--Raw depth image-->
    <arg name="depReg_imgrect" value="/zed/zed_node/depth/depth_registered"/>  <!--Raw depth image-->
    <arg name="out_cloud" value="/zed/camera/depth/points2"/>
   
    <node pkg="nodelet" type="nodelet" name="standalone_nodelet" args="manager" output="screen"/>

   
    <!-- Construct point cloud of the rgb and depth topics -->
    <node pkg="nodelet" type="nodelet" name="points_xyz" args="load depth_image_proc/point_cloud_xyz standalone_nodelet --no-bond">
      <remap from="camera_info" to="$(arg camera_info)" />
      <remap from="image_rect" to="$(arg depReg_imgrect)"/>
      <remap from="points" to="$(arg out_cloud)"/>
    </node>

</launch>
